# ----- NBV CALCULATION -----

maxIterationSteps: 20
epsilon: 0.01 # minimum rating difference of NBVs from 2 consecutive iteration steps. As long as this difference is bigger than epsilon, further iteration steps are executed.
nRatingThreads: -1 # -1 gets an optimal a number of threads, otherwise the {nRatingThreads} threads are used

useMinUtility: true
enableCropBoxFiltering : false


# ----- RATING -----

# ratingModuleId == 1 => DefaultRatingModule
ratingModuleId: 1
useTargetRobotState: false # whether it should be checked if the calculated target robot state is reachable

mOmegaUtility: 60 # weighting factor for the usage
mOmegaPan: 1  # weighting factor for rotating the pan-axis of the PTU
mOmegaTilt: 1 # weighting factor for rotating of the tilt-axis of the PTU
mOmegaRot: 10 # weighting factor for rotating the base
mOmegaBase: 135 # weighting factor for moving the base
mOmegaRecognizer: 10 # weighting factor for object detection
speedFactorRecognizer: 3.0 # time costs for object detection in in sec/object

mRatingNormalAngleThreshold: 45.0 # used to rate angles in rating module

# enable / disable parts of utility calculation for testing purposes
useOrientationUtility: true
useProximityUtility: true
useSideUtility: true

enableIntermediateObjectWeighting : false


# ----- CAMERA MODEL FILTER -----

fovx: 30
fovy: 20
ncp: 0.4 # distance to NearClippingPlane in meter
fcp: 1.5 # distance to FarClippingPlane in meter

# cameraFilterId == 1 => Raytracing3DBasedStereoCameraModelFilter
# cameraFilterId == 2 => StereoCameraModelFilter
# cameraFilterId == 3 => Raytracing3DBasedSingleCameraModelFilter
# cameraFilterId == 4 => SingleCameraModelFilter
# Note that the first 2 ids are stereo based filters, while the last 2 are based on a single camera.
# Furthermore even ids don't use ray tracing, while odd ids use ray tracing.
cameraFilterId: 2

# raytracing
voxelSize: 0.04
worldHeight: 3
worldFilePath: ./rsc/world/world.xml
visualizeRaytracing: false


# ----- HYPOTHESIS UPDATER -----

# hypothesisUpdaterId == 1 => PerspectiveHypothesisUpdater
# hypothesisUpdaterId == 2 => DefaultHypothesisUpdater
hypothesisUpdaterId: 1

mHypothesisUpdaterAngleThreshold: 45.0 # used to rate angles in hypothesis updater module


# ----- SPACE SAMPLER -----

# spaceSamplerId == 1 => MapBasedHexagonSpaceSampler
# spaceSamplerId == 2 => MapBasedRandomSpaceSampler
# spaceSamplerId == 3 => PlaneSubSpaceSampler
# spaceSamplerId == 4 => Raytracing2DBasedSpaceSampler
spaceSamplerId: 1

radius: 0.15 # hexagon radius if using the MapBasedHexagonSpaceSampler
sampleSizeMapBasedRandomSpaceSampler: 100 # number of samples if using the MapBasedRandomSpaceSampler


# ----- UNIT SPHERE SAMPLER -----

# sphereSamplerId == 1 => SpiralApproxUnitSphereSampler
sphereSamplerId: 1

sampleSizeUnitSphereSampler: 384 # number of samples created by SpiralApproxUnitSphereSampler. Greater -> more precise orientation.


# ----- MAP -----

colThresh: 40 # greater values results in problems during simulation in navigation. Smaller -> greater distance to obstacles.


# ----- OUTPUT -----

debugLevels: "[NONE]" # ALL, NONE, PARAMETERS, SERVICE_CALLS, VISUALIZATION, CALCULATION, RATING, ROBOT_MODEL, MAP, WORLD, VOXEL_GRID, FILTER, IK_RATING, SPACE_SAMPLER, HYPOTHESIS_UPDATER
